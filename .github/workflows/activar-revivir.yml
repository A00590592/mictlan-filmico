name: ⚡ Revivir Rápido Unificado

on:
  workflow_dispatch:
  repository_dispatch:
    types: [revivir_trigger]

jobs:
  altar_revivir:
    runs-on: ubuntu-latest
    steps:
      - name: 🪶 Clonar repositorio
        uses: actions/checkout@v4

      - name: 🔥 Enviar señal MQTT + registrar evento
        env:
          MQTT_USER: ${{ secrets.ALTAR_USER }}
          MQTT_PASS: ${{ secrets.ALTAR_PASS }}
          MQTT_HOST: ${{ secrets.ALTAR_HOST }}
        run: |
          echo "🐍 Ejecutando ritual de revivir..."
          python3 - <<'EOF'
import os, ssl, json, socket
from datetime import datetime

# ========= CONFIG =========
user = os.environ["MQTT_USER"]
pwd  = os.environ["MQTT_PASS"]
host = os.environ["MQTT_HOST"]
topic = "Mictlan"
msg = "revivir"
port = 8883
log_file = "data/revivir_log.json"
# ==========================

def publish_mqtt(host, port, user, pwd, topic, msg):
    try:
        import paho.mqtt.client as mqtt
        client = mqtt.Client()
        client.username_pw_set(user, pwd)
        client.tls_set(cert_reqs=ssl.CERT_NONE)
        client.tls_insecure_set(True)
        client.connect(host, port, 60)
        client.publish(topic, msg)
        client.disconnect()
        print("✅ Señal MQTT enviada correctamente.")
        return True
    except Exception as e:
        print(f"⚠️ No se pudo usar paho-mqtt: {e}")
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            ssl_sock = ssl.wrap_socket(s)
            ssl_sock.connect((host, port))
            ssl_sock.send(b"MQTT PUBLISH " + msg.encode())
            ssl_sock.close()
            print("✅ Señal enviada con método alternativo.")
            return True
        except Exception as e2:
            print(f"❌ Error total al enviar MQTT: {e2}")
            return False

def registrar_evento(log_file):
    os.makedirs(os.path.dirname(log_file), exist_ok=True)
    data = []
    if os.path.exists(log_file):
        with open(log_file, "r") as f:
            try:
                data = json.load(f)
            except:
                data = []
    entry = {"mensaje": f"Revivir desde la web - {datetime.utcnow().isoformat()}Z"}
    data.append(entry)
    with open(log_file, "w") as f:
        json.dump(data, f, indent=2)
    print("📜 Registro actualizado correctamente.")

if publish_mqtt(host, port, user, pwd, topic, msg):
    registrar_evento(log_file)
else:
    print("❌ No se registró evento por error en MQTT.")
EOF

      - name: 💾 Subir registro actualizado
        env:
          ALTAR_TOKEN: ${{ secrets.ALTAR_TOKEN }}
        run: |
          git config --global user.name "Altar Mictlan"
          git config --global user.email "altar@mictlan.io"
          git add data/revivir_log.json
          git commit -m "🕯️ Revivir rápido unificado"
          git push https://x-access-token:${ALTAR_TOKEN}@github.com/${{ github.repository }}.git
