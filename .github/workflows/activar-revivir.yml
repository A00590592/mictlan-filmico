name: üîî Revivir üîî

on:
  workflow_dispatch:
  repository_dispatch:
    types: [revivir_trigger]

permissions:
  contents: write

jobs:
  trigger:
    runs-on: ubuntu-latest
    steps:
      # 1Ô∏è‚É£ Verificar o instalar paho-mqtt
      - name: ‚öôÔ∏è Verificar paho-mqtt
        run: python -m pip show paho-mqtt || python -m pip install --quiet paho-mqtt

      # 2Ô∏è‚É£ Enviar se√±al MQTT al altar
      - name: üïØÔ∏è Enviar se√±al al altar (TLS + auth)
        env:
          MQTT_USER: ${{ secrets.ALTAR_USER }}
          MQTT_PASS: ${{ secrets.ALTAR_PASS }}
          MQTT_HOST: ${{ secrets.ALTAR_HOST }}
        shell: python
        run: |
          import os, ssl
          import paho.mqtt.publish as publish

          publish.single(
              topic="Mictlan",
              payload="revivir",
              qos=0,
              hostname=os.environ["MQTT_HOST"],
              port=8883,
              auth={"username": os.environ["MQTT_USER"], "password": os.environ["MQTT_PASS"]},
              tls={"cert_reqs": ssl.CERT_NONE}
          )
          print("‚úÖ Se√±al 'revivir' publicada")

      # 3Ô∏è‚É£ Clonar toda la historia del repo
      - name: ü™∂ Clonar repositorio completo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 4Ô∏è‚É£ Cambiar a rama altar-log (crearla si no existe)
      - name: üîÄ Cambiar o crear rama altar-log
        run: |
          git fetch origin
          git checkout -B altar-log || git checkout altar-log

      # 5Ô∏è‚É£ Registrar evento en el log
      - name: üìÖ Registrar evento en el log
        run: |
          echo "ü™∂ Registrando evento en data/revivir_log.json..."
          mkdir -p data
          FILE=data/revivir_log.json
          DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          MSG="Revivir ejecutado desde workflow - $DATE"
          if [ ! -f "$FILE" ]; then
            echo "[]" > "$FILE"
          fi
          cat "$FILE" | jq --arg m "$MSG" '. + [{"mensaje": $m}]' > tmp.json
          mv tmp.json "$FILE"

      # 6Ô∏è‚É£ Configurar Git y subir a altar-log (modo seguro)
      - name: üíæ Commit & push log actualizado (sin conflictos)
        env:
          ALTAR_TOKEN: ${{ secrets.ALTAR_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          git config --global user.name "Altar Mictlan"
          git config --global user.email "altar@mictlan.io"

          # Alinear con la rama remota y evitar conflictos
          git fetch origin altar-log
          git reset --hard origin/altar-log || true

          # A√±adir y subir solo el log actualizado
          git add data/revivir_log.json
          if git diff --cached --quiet; then
            echo "üî∏ No hay cambios nuevos que registrar."
          else
            git commit -m "üïØÔ∏è Nuevo revivir registrado (rama altar-log)"
            git push https://x-access-token:${ALTAR_TOKEN}@github.com/${REPO}.git altar-log --force-with-lease
          fi
